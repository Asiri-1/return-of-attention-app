rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===============================================
    // üîß ADMIN ACCESS - Complete read access for analytics
    // ===============================================
    match /{document=**} {
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üë§ USER PROFILES - Basic user data
    // ===============================================
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // ===============================================
    // üßò PRACTICE SESSIONS - Main meditation tracking
    // ===============================================
    match /practiceSessions/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      // Admin access
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üå± MIND RECOVERY SESSIONS - Quick mindfulness sessions
    // ===============================================
    // ‚úÖ CRITICAL FIX: Your code uses 'mindRecoverySessions', not 'mindRecoveryHistory'
    match /mindRecoverySessions/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      // Admin access
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ LEGACY SUPPORT: Keep old collection name for backward compatibility
    match /mindRecoveryHistory/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üìù EMOTIONAL NOTES & WELLNESS TRACKING
    // ===============================================
    match /emotionalNotes/{noteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ NEW: Daily notes collection
    match /daily_notes/{noteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ NEW: Reflections collection
    match /reflections/{reflectionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // ü§ñ AI CHAT INTERACTIONS
    // ===============================================
    match /chatInteractions/{interactionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üìà STAGE PROGRESSION & PROGRESS TRACKING
    // ===============================================
    // ‚úÖ CRITICAL: User progress tracking (used by PracticeContext)
    match /userProgress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ ALTERNATIVE: Progress tracking with different document structure
    match /userProgress/{progressId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ STAGE PROGRESSION: Hours-based tracking
    match /stageProgression/{stageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ SESSION COUNTS: T-level completion tracking
    match /sessionCounts/{countId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ STAGE HOURS: Per-stage hour tracking
    match /stageHours/{hoursId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üìä ANALYTICS & TRACKING EVENTS
    // ===============================================
    // ‚úÖ ANALYTICS EVENTS: User behavior tracking
    match /analytics_events/{eventId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ GLOBAL ANALYTICS: Admin-only system-wide data
    match /analytics/{analyticsId} {
      allow read, write: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // ‚öôÔ∏è SYSTEM CONFIGURATION
    // ===============================================
    // ‚úÖ SYSTEM CONFIG: App settings and stage requirements
    match /systemConfig/{configId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ STAGE REQUIREMENTS: Global stage progression rules
    match /stageRequirements/{requirementId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üèÜ LEADERBOARDS & SOCIAL FEATURES
    // ===============================================
    match /leaderboards/{boardId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ USER ACHIEVEMENTS: Individual progress milestones
    match /achievements/{achievementId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üîÑ ONBOARDING & USER JOURNEY
    // ===============================================
    // ‚úÖ ONBOARDING DATA: User setup and preferences
    match /onboardingData/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ USER PREFERENCES: App settings and customization
    match /userPreferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üéØ AUDIT COMPLIANCE: Additional Required Collections
    // ===============================================
    // ‚úÖ AUDIT REQUIREMENT: Practice session history (legacy compatibility)
    match /practice_sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ AUDIT REQUIREMENT: Mind recovery session history
    match /mind_recovery_sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ AUDIT REQUIREMENT: Stage progression history
    match /stage_progression/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üß† HAPPINESS & WELLNESS TRACKING
    // ===============================================
    // ‚úÖ HAPPINESS TRACKING: Mood and wellbeing data
    match /happinessTracking/{trackingId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ WELLNESS METRICS: Comprehensive health tracking
    match /wellnessMetrics/{metricId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üîß BACKUP & RECOVERY COLLECTIONS
    // ===============================================
    // ‚úÖ SESSION BACKUPS: Recovery for failed saves
    match /sessionBackups/{backupId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ DATA MIGRATION: Support for app updates
    match /dataMigration/{migrationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ===============================================
    // üêõ ERROR TRACKING & DEBUGGING
    // ===============================================
    // ‚úÖ ERROR LOGS: User-specific error tracking
    match /errorLogs/{errorId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
    
    // ‚úÖ SYSTEM LOGS: Admin-only system-wide logging
    match /systemLogs/{logId} {
      allow read, write: if request.auth != null && request.auth.token.email == 'asiriamarasinghe35@gmail.com';
    }
  }
}